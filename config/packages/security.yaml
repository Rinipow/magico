security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        user_db:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            security: true
            pattern: ^/
            provider: user_db
            logout_on_user_change: false
            user_checker: App\Security\UserChecker
            form_login:
                login_path: /login
                check_path: /login
                default_target_path: index
                username_parameter: email
                password_parameter: password
                csrf_parameter: _token
                csrf_token_generator: security.csrf.token_manager
                csrf_token_id: login_auth
            logout:
                path:   /logout
                invalidate_session: false
            anonymous: true
            remember_me:
                name: 'REMEMBERME'
                secret: '%env(APP_SECRET)%'
                lifetime: 2419200 # 4 weeks in seconds
                path: /
                remember_me_parameter: remember_me

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
